/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2020-03-14 08:19:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.human;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java142.todak.human.vo.CommVO;
import java.util.concurrent.TimeUnit;

public final class selectRecordAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.concurrent.TimeUnit");
    _jspx_imports_classes.add("java142.todak.human.vo.CommVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("   \r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");

	Object obj=request.getAttribute("comList");
	ArrayList aList = (ArrayList)obj;
	CommVO cvo=null;
	
	Object objCvo=request.getAttribute("cvo");
	CommVO pageVO=(CommVO)objCvo;
	
	int pageSize = pageVO.getPageSize();
	int groupSize = pageVO.getGroupSize();
	int curPage = pageVO.getCurPage();
	int totalCount = pageVO.getTotalCount();
	
	System.out.println("pageSize"+pageSize);
	System.out.println("groupSize"+groupSize);
	System.out.println("curPage"+curPage);
	System.out.println("totalCount"+totalCount);
	
	if(request.getParameter("curPage") != null)
	{
		curPage = Integer.parseInt(request.getParameter("curPage"));
	}
	String key=null;
	String sdate=pageVO.getStartdate();
	String edate=pageVO.getEnddate();
	
	long dayHour=0;
	long dayMinutes=0;
	long weekHour=0;
	long weekMinutes=0;
	long lastHour=0;
	long lastMinutes=0;
	long extraHour=0;
	long extraMinutes=0;
	String ser=pageVO.getHm_empnum();
	

      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\t\t\t\tsrc=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"./jquery-ui-1.12.1/datepicker-ko.js\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\tif('");
      out.print(sdate );
      out.write("' != 'null'){\r\n");
      out.write("\t\t\t$(\"#startday\").val('");
      out.print(sdate );
      out.write("');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif('");
      out.print(edate );
      out.write("' != 'null'){\r\n");
      out.write("\t\t\t$(\"#endday\").val('");
      out.print(edate );
      out.write("');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif('");
      out.print(pageSize );
      out.write("' > 0){\r\n");
      out.write("\t\t\t$(\"#pageCtrl\").val('");
      out.print(pageSize );
      out.write("');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\"#selectData\").click(function(){\r\n");
      out.write("\t\t\tif($(\"#endday\").val()==null||$(\"#endday\").val()==''){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar sday=$(\"#startday\").val();\r\n");
      out.write("\t\t\t\t$(\"#endday\").val(sday);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tgoPage(1);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#pageCtrl\").change(function(){\r\n");
      out.write("\t\t\tgoPage(1);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#startday\").datepicker({\r\n");
      out.write("\t    \t dateFormat: 'yymmdd'\r\n");
      out.write("\t    \t,showMonthAfterYear:true             \r\n");
      out.write("\t        ,yearSuffix: \"년\" \r\n");
      out.write("\t       \t,changeYear: true //콤보박스에서 년 선택 가능\r\n");
      out.write("\t        ,changeMonth: true //콤보박스에서 월 선택 가능       \r\n");
      out.write("\t        ,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] \r\n");
      out.write("\t        ,monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] \r\n");
      out.write("\t        ,dayNamesMin: ['일','월','화','수','목','금','토']\r\n");
      out.write("\t        ,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일']\r\n");
      out.write("\t\t\t,numberOfMonths: 1\r\n");
      out.write("\t\t\t,onSelect: function(selected) {\r\n");
      out.write("\t\t\t$(\"#endday\").datepicker(\"option\",\"minDate\", selected)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t    });\r\n");
      out.write("\t\t$(\"#endday\").datepicker({\r\n");
      out.write("\t    \t dateFormat: 'yymmdd'\r\n");
      out.write("\t    \t,showMonthAfterYear:true             \r\n");
      out.write("\t        ,yearSuffix: \"년\" \r\n");
      out.write("\t       \t,changeYear: true //콤보박스에서 년 선택 가능\r\n");
      out.write("\t        ,changeMonth: true //콤보박스에서 월 선택 가능       \r\n");
      out.write("\t        ,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] \r\n");
      out.write("\t        ,monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] \r\n");
      out.write("\t        ,dayNamesMin: ['일','월','화','수','목','금','토']\r\n");
      out.write("\t        ,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일']\r\n");
      out.write("\t\t\t,numberOfMonths: 1\r\n");
      out.write("\t\t\t,onSelect: function(selected) {\r\n");
      out.write("\t\t\t$(\"#startday\").datepicker(\"option\",\"maxDate\", selected)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t    });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\".goDetail\").click(function(){\r\n");
      out.write("\t\t\talert(\"디테일 클릭됨!\");\r\n");
      out.write("\t\t\tvar comnum=$(this).parents(\"tr\").attr(\"data\");\r\n");
      out.write("\t\t\talert(\"읽어온 값은\"+comnum);\r\n");
      out.write("\t\t\tconsole.log(\"읽어온 값은\"+comnum);\r\n");
      out.write("\t\t\t$(\"#hc_comnum\").val(comnum);\r\n");
      out.write("\t\t\twindow.open(\"\",\"pop\",\"width=550, height=450\");\r\n");
      out.write("\t\t\t$(\"#detailForm\").attr({\r\n");
      out.write("\t\t\t\t\"method\":\"get\",\r\n");
      out.write("\t\t\t\t\"target\":\"pop\",\r\n");
      out.write("\t\t\t\t\"action\":\"/human/changeComm.td\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#detailForm\").submit();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction goPage(page){\r\n");
      out.write("\t\t$(\"#page\").val(page);\r\n");
      out.write("\t\t$(\"#hm_empnum\").val('");
      out.print(ser );
      out.write("');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#selectDate\").attr({\r\n");
      out.write("\t\t\t\"method\":\"get\",\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\"action\":\"/human/changeCommute.td\"\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#selectDate\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<form name=\"detailForm\" id=\"detailForm\" method=\"post\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"hc_comnum\" id=\"hc_comnum\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form id=\"selectDate\" \r\n");
      out.write("\t\t      name=\"selectDate\"\r\n");
      out.write("\t\t      method=\"POST\">\r\n");
      out.write("\t\t\t<div class daySelect>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"startday\" id=\"startday\"> \r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"endday\" id=\"endday\"> \r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"조회\" id=\"selectData\"/>\t\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"hm_empnum\" id=\"hm_empnum\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<select id=\"pageCtrl\" name=\"pageCtrl\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"5\">선택</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">1줄</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"10\">10줄</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"20\">20줄</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"30\">30줄</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"50\">50줄</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<table border=\"1\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>출근시간</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>퇴근시간</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>일 근무 시간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<th>주 근무 시간</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>남은 근무 시간</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>추가 근무 시간</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>일 근무 유형</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");

					if(aList.size()>0){
						for(int i=0;i<aList.size();i++){
							cvo=(CommVO)aList.get(i);
							
							dayHour=TimeUnit.MINUTES.toHours(Integer.parseInt(cvo.getHc_dayhour()));
						    dayMinutes=TimeUnit.MINUTES.toMinutes(Integer.parseInt(cvo.getHc_dayhour()))
						    		   -TimeUnit.HOURS.toMinutes(dayHour);
							weekHour=TimeUnit.MINUTES.toHours(Integer.parseInt(cvo.getHc_weekhour()));
							weekMinutes=TimeUnit.MINUTES.toMinutes(Integer.parseInt(cvo.getHc_weekhour()))
						    		   -TimeUnit.HOURS.toMinutes(weekHour);
							lastHour=TimeUnit.MINUTES.toHours(Integer.parseInt(cvo.getHc_lasthour()));
							lastMinutes=TimeUnit.MINUTES.toMinutes(Integer.parseInt(cvo.getHc_lasthour()))
						    		   -TimeUnit.HOURS.toMinutes(lastHour);
							extraHour=TimeUnit.MINUTES.toHours(Integer.parseInt(cvo.getHc_extraworking()));
							extraMinutes=TimeUnit.MINUTES.toMinutes(Integer.parseInt(cvo.getHc_extraworking()))
						    		   -TimeUnit.HOURS.toMinutes(extraHour);		
							

      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<tr data='");
      out.print(cvo.getHc_comnum() );
      out.write("'>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(cvo.getHc_date().substring(0,10) );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(cvo.getHc_workin().substring(11,16) );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(cvo.getHc_workout().substring(11,16) );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(dayHour+":"+dayMinutes );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(weekHour+":"+weekMinutes );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(lastHour+":"+lastMinutes );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>");
      out.print(extraHour+":"+extraMinutes );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<th><span class=\"goDetail\">");
      out.print(cvo.getHc_tanda() );
      out.write("</span></th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");

						}
		}
	

      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</thead>\t\r\n");
      out.write("\t\t\t</table>\t\t\t\r\n");
      out.write("\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "paging.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("url", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("/human/commuteALlRecord.td", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("str", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("pageSize", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(pageSize), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("groupSize", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(groupSize), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("curPage", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(curPage), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("totalCount", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(totalCount), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("key", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(key), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("sdate", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(sdate), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("edate", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(edate), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ser", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ser), request.getCharacterEncoding()), out, true);
      out.write("\t\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
