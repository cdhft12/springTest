/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.49
 * Generated at: 2020-03-16 03:21:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.human;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chageCommType_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");

	Object obj=request.getAttribute("comnum");
	String comnum=(String)obj;
	
	String hm_empnum = (String)request.getAttribute("hm_empnum");

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\t\t\t\tsrc=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"./jquery-ui-1.12.1/datepicker-ko.js\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t$(\"#changeComm\").click(function(){\r\n");
      out.write("\t\t\tvar result=null;\r\n");
      out.write("\t\t\tif($('input:checkbox[id=\"leave\"]').is(\":checked\")){\r\n");
      out.write("\t\t\t\tresult=$('input:checkbox[id=\"leave\"]').val();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif($('input:checkbox[id=\"hd\"]').is(\":checked\")){\r\n");
      out.write("\t\t\t\tresult=$('input:checkbox[id=\"hd\"]').val();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif($('input:checkbox[id=\"half\"]').is(\":checked\")){\r\n");
      out.write("\t\t\t\tresult=$('input:checkbox[id=\"half\"]').val();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$(\"#hc_tanda\").val(result);\r\n");
      out.write("\t\t\t$(\"#hc_comnum\").val('");
      out.print(comnum );
      out.write("');\r\n");
      out.write("\t\t\t$(\"#hm_empnum\").val('");
      out.print(hm_empnum );
      out.write("');\r\n");
      out.write("\t\t\t$(\"#change\").attr({\r\n");
      out.write("\t\t\t\t\"method\":\"get\",\r\n");
      out.write("\t\t\t\t\"action\":\"/human/changeCommUpdate.td\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#change\").submit();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction oneCheckbox(a){\r\n");
      out.write("        var obj = document.getElementsByName(\"comm\");\r\n");
      out.write("        for(var i=0; i<obj.length; i++){\r\n");
      out.write("            if(obj[i] != a){\r\n");
      out.write("                obj[i].checked = false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t<form name=\"change\" id=\"change\" method=\"post\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"hc_tanda\" id=\"hc_tanda\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"hc_comnum\" id=\"hc_comnum\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"hm_empnum\" id=\"hm_empnum\">\r\n");
      out.write("     \t\t<label><input type=\"checkbox\" name=\"comm\" id=\"leave\" value=\"71\" onclick=\"oneCheckbox(this)\"> 퇴근</label>\r\n");
      out.write("     \t\t<label><input type=\"checkbox\" name=\"comm\" id=\"hd\" value=\"72\" onclick=\"oneCheckbox(this)\"> 휴가</label>\r\n");
      out.write("     \t\t<label><input type=\"checkbox\" name=\"comm\" id=\"half\" value=\"49\" onclick=\"oneCheckbox(this)\"> 반차</label>\r\n");
      out.write("     \t\t<input type=\"button\" value=\"등록\" id=\"changeComm\"/>\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
